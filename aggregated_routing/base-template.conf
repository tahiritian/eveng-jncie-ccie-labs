interfaces {
    {% for interface in interfaces %}
    {{ interface.name }}  {
        description "{{ interface.description }}";
        unit {{ interface.unit }} {
            family inet {
                address {{ interface.ip }};
            }

        }
    }
    {% endfor %}
}
{% if sys_options %}
    {% for item in sys_options %}
    system {
           host-name {{ item.name }};
    {% endfor %}
{% endif %}
}
{% if routing %}
protocols {
    {% if routing.bgp %}
    {% set bgp = routing.bgp %}
    bgp {
        {% if bgp.external_neighbors %}
        group external-peers {
            type external;
            {% for neighbor in bgp.external_neighbors %}
            neighbor {{ neighbor.ip_address }} {
                peer-as {{ neighbor.as_number }};
            }
            {% endfor %}
        }
        {% endif %}
        {% if bgp.internal_neighbors %}
        group internal-peers {
            type internal;
            {% for neighbor in bgp.internal_neighbors %}
            neighbor {{ neighbor.ip_address }};
                peer-as {{ neighbor.as_number }};
            {% if neighbor.export %}
            export  {{ neighbor.export }};
            {% endif %}
            {% endfor %}         
           }
        {% endif %}
    }
    {% endif %}
}
{% endif %}
{% if local_as_number %}
routing-options {
    autonomous-system {{ local_as_number }};
{% if aggregate_routing %}
    aggregate {
         route {{ aggregate_routing }} policy aggregate-route;
}
{% endif %}
}
{% endif %}
{% if policy_options %}
policy-options {
    {% for item in policy_options %}
    policy-statement {{ item.policy }} {
        from {
            protocol {{ item.protocol }};            
            route-filter {{ item.route }} orlonger;
        }
        then accept;
            }
    }
    {% endfor %}
{% endif %}

{% if export_route %}
policy-options {
    {% for item in export_route %}
    policy-statement {{ item.policy }} {
        from {
            protocol {{ item.protocol }};            
            route-filter {{ item.route }} exact;
        }
        then accept;
            }
    }
    {% endfor %}
{% endif %}

protocols {                             
    ospf {
        area {{ ospf_area_number }} {
            interface {{ r2 }};
            interface {{ r3 }};
            interface {{ r4 }};
        }
    }  
    bgp {
        export {{ export_aggregate }};
        }
    }
